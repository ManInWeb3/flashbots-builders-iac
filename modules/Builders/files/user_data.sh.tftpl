#!/bin/bash

#* Updating the system
apt update
NEEDRESTART_MODE=a apt -y upgrade
##* Installing required tools
apt install -y awscli jq  # Reqiured to get AWS secret

#* Configure data volume
DATA_DIR="/data"
DATA_VOL_SERIAL="$(printf ${data_volume_id} | sed 's/vol-/vol/')"
DATA_VOL_DEVICE="/dev/$(lsblk -o +SERIAL | grep $DATA_VOL_SERIAL | awk '{print($1)}')"

mkdir -p $DATA_DIR
while ! lsblk -o +SERIAL|grep $DATA_VOL_SERIAL ; do
  echo "Waiting for data volume to be attached..."
  sleep 1
done

##* Format data disk if not formatted
if ! blkid $DATA_VOL_DEVICE | grep 'TYPE="xfs"'; then
  mkfs.xfs $DATA_VOL_DEVICE
fi
##* Mount data disk
mount $DATA_VOL_DEVICE $DATA_DIR

#! Due to t3 is has just 1G of RAM add swap
#* Add swap
fallocate -l 4G /swapfile
chmod 600 /swapfile
mkswap /swapfile
swapon /swapfile
swapon --show

#* Create user to run the services
BUILDER_USR="builder"
adduser --no-create-home --system $BUILDER_USR

#* Install BUILDER and configure
BUILDER_RELEASE="${builder_release}"
BUILDER_RELEASE_URL="https://github.com/ManInWeb3/flashbots-builder/releases/download/$${BUILDER_RELEASE}/builder_$${BUILDER_RELEASE:1}_linux_amd64.tar.gz"
BUILDER_BIN="/usr/local/bin/builder"
ARCHIVE="/tmp/builder.tar.gz"
curl -Lo $ARCHIVE $BUILDER_RELEASE_URL
tar xzvf $ARCHIVE -C $(dirname $BUILDER_BIN) $(basename $BUILDER_BIN)
rm $ARCHIVE
chmod a+x $BUILDER_BIN

##* Create required folders
mkdir -p $DATA_DIR/${ethereum_network}/$(basename $BUILDER_BIN)
JWT_PATH="$DATA_DIR/${ethereum_network}/jwt.hex"

##* Create systemd service file
BUILDER_SYSTEMD_SERVICE="$DATA_DIR/builder.service"
cat > $BUILDER_SYSTEMD_SERVICE <<EOF
[Unit]
Description=BUILDER cli
After=network.target

[Service]
Type=simple
User=$BUILDER_USR

Restart=always
RestartSec=30
KillMode=process
TimeoutStartSec=120 # To give time to start
TimeoutStopSec=120  # To avoid db corruption

WorkingDirectory=$DATA_DIR/${ethereum_network}/$(basename $BUILDER_BIN)
Environment="BUILDER_TX_SIGNING_KEY=$(aws secretsmanager get-secret-value --region ${aws_region} --secret-id ${builder_name}|jq -r .SecretString)"
ExecStart=$BUILDER_BIN --${ethereum_network} \\
            --authrpc.jwtsecret=$JWT_PATH \\
            --datadir=$DATA_DIR/${ethereum_network}/$(basename $BUILDER_BIN) \\
            --log.file=$DATA_DIR/${ethereum_network}/$(basename $BUILDER_BIN)_$BUILDER_RELEASE.log \\
            ${builder_AdditionalArgsStr}

[Install]
WantedBy=default.target
EOF

#* Install and confiugre Nimbus beacon node
NIMBUS_RELEASE="${nimbus_release}"
NIMBUS_RELEASE_URL="$(curl -L \
  -H "Accept: application/vnd.github+json" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  -s https://api.github.com/repos/status-im/nimbus-eth2/releases/tags/$NIMBUS_RELEASE \
  | jq -r ".assets|.[].browser_download_url" \
  | grep "nimbus-eth2_Linux_amd64_.*\.tar\.gz")"

NIMBUS_BIN="/usr/local/bin/nimbus_beacon_node"
ARCHIVE=$(mktemp /tmp/XXXXXXXXX.tar.gz)
TMP_DIR=$(mktemp -d)
curl -Lo $ARCHIVE $NIMBUS_RELEASE_URL
EXTRACTED_DIR=$(basename $NIMBUS_RELEASE_URL .tar.gz)
tar xzvf $ARCHIVE -C $TMP_DIR $EXTRACTED_DIR/build/nimbus_beacon_node
mv $EXTRACTED_DIR/build/nimbus_beacon_node $NIMBUS_BIN
chmod a+x $NIMBUS_BIN
rm -rf $ARCHIVE $EXTRACTED_DIR

##* Create data folder
mkdir -p $DATA_DIR/${ethereum_network}/$(basename $NIMBUS_BIN)

#* Create PRYSM beacon-chain systemd service file
NIMBUS_SYSTEMD_SERVICE="$DATA_DIR/nimbus_beacon_node.service"
cat > $NIMBUS_SYSTEMD_SERVICE <<EOF
[Unit]
Description=ETH2 Nimbus beacon node
After=network.target
Requires=$(basename $BUILDER_SYSTEMD_SERVICE)

[Service]
Type=simple
User=$BUILDER_USR

Restart=always
RestartSec=30
KillMode=process
TimeoutStartSec=120 # To give time to start
TimeoutStopSec=120  # To avoid db corruption

WorkingDirectory=$DATA_DIR/${ethereum_network}/$(basename $NIMBUS_BIN)
ExecStart=$NIMBUS_BIN \\
            --data-dir=$DATA_DIR/${ethereum_network}/$(basename $NIMBUS_BIN) \\
            --network=${ethereum_network} \\
            --jwt-secret=$JWT_PATH \\
            --log-file=$DATA_DIR/${ethereum_network}/$(basename $NIMBUS_BIN)_$NIMBUS_RELEASE.log \\
            --web3-url=http://127.0.0.1:8551 \
            --rest \
            --rest-port=3500 \
            --metrics

[Install]
WantedBy=default.target
EOF

#* Set permissions on the data dir
###! ssm-user group created by ssm agent and it takes time so need to wait
for i in $(seq 1 10); do
  chown -R $BUILDER_USR:ssm-user $DATA_DIR && break || echo "$i: Waiting when SSM agent synced"
  sleep 1
done

#* Enabling and Starting services
systemctl enable $BUILDER_SYSTEMD_SERVICE
# systemctl start $(basename $BUILDER_SYSTEMD_SERVICE)

systemctl enable $NIMBUS_SYSTEMD_SERVICE
# systemctl start $(basename $NIMBUS_SYSTEMD_SERVICE)
