#!/bin/bash

# Updating the system
apt update -y dist-upgrade

DATA_DIR="/data"
DATA_VOL_SERIAL="$(printf ${data_volume_id} | sed 's/vol-/vol/')"
DATA_VOL_DEVICE="/dev/$(lsblk -o +SERIAL | grep $DATA_VOL_SERIAL | awk '{print($1)}')"

mkdir -p $DATA_DIR
while ! lsblk -o +SERIAL|grep $DATA_VOL_SERIAL ; do
  echo "Waiting for data volume to be attached..."
  sleep 1
done

#* Format data disk if not formatted
if ! blkid $DATA_VOL_DEVICE $DATA_DIR|grep 'TYPE="xfs"'; then
  mkfs.xfs $DATA_VOL_DEVICE
fi
#* Mount data disk
mount $DATA_VOL_DEVICE $DATA_DIR

#! Due to t3 is has just 1G of RAM add swap
fallocate -l 4G /swapfile
chmod 600 /swapfile
mkswap /swapfile
swapon /swapfile
swapon --show

#* Create user to run the services
BUILDER_USR="builder"
adduser --no-create-home --system $BUILDER_USR
chown -R $BUILDER_USR $DATA_DIR

BUILDER_RELEASE="${builder_release}"

BUILDER_RELEASE_URL="https://github.com/ManInWeb3/flashbots-builder/releases/download/$${BUILDER_RELEASE}/builder_$${BUILDER_RELEASE:1}_linux_amd64.tar.gz"
BUILDER_BIN="/usr/local/bin/builder"

#* Download and install BUILDER
ARCHIVE="/tmp/builder.tar.gz"
curl -Lo $ARCHIVE $BUILDER_RELEASE_URL
tar xzvf $ARCHIVE -C $(dirname $BUILDER_BIN) $(basename $BUILDER_BIN)
rm $ARCHIVE
chmod a+x $BUILDER_BIN

##* Configure BUILDER

#* Create required folders
mkdir -p $DATA_DIR/${ethereum_network}/$(basename $BUILDER_BIN)
BUILDER_JWT_PATH="$DATA_DIR/${ethereum_network}/jwt.hex"

#* Create systemd service file
BUILDER_SYSTEMD_SERVICE="$DATA_DIR/builder.service"
cat > $BUILDER_SYSTEMD_SERVICE <<EOF
[Unit]
Description=BUILDER cli
# Requires=new dependency
# After=new dependency
After=network.target
# Requires=geth.socket

[Service]
Type=simple
User=$BUILDER_USR
WorkingDirectory=$DATA_DIR/${ethereum_network}/$(basename $BUILDER_BIN)
ExecStart=$BUILDER_BIN --${ethereum_network} \\
            --authrpc.jwtsecret=$BUILDER_JWT_PATH \\
            --cache 512 \\   # Only on small RAM machine
            --datadir=$DATA_DIR/${ethereum_network}/$(basename $BUILDER_BIN) \\
            --http --http.api eth,net,engine,admin \\
            --log.file=$DATA_DIR/${ethereum_network}/$(basename $BUILDER_BIN).log \\
            --builder \\
            --builder.local_relay \\
            --builder.beacon_endpoints=http://127.0.0.1:3500

[Install]
WantedBy=default.target
EOF

systemctl enable $BUILDER_SYSTEMD_SERVICE
systemctl start $(basename $BUILDER_SYSTEMD_SERVICE)

##* Confiugre Prysm
PRYSM_RELEASE="v4.1.0"
PRYSM_RELEASE_URL="https://github.com/prysmaticlabs/prysm/releases/download/$PRYSM_RELEASE/beacon-chain-$PRYSM_RELEASE-alpha.1-linux-amd64"

PRYSM_BC_BIN="/usr/local/bin/beacon-chain"
curl -Lo $PRYSM_BC_BIN $PRYSM_RELEASE_URL
chmod a+x $PRYSM_BC_BIN

#* Create required folders
mkdir -p $DATA_DIR/${ethereum_network}/$(basename $PRYSM_BC_BIN)

#* Create PRYSM beacon-chain systemd service file
PRYSM_BC_SYSTEMD_SERVICE="$DATA_DIR/prysm_beacon-chain.service"

cat > $PRYSM_BC_SYSTEMD_SERVICE <<EOF
[Unit]
Description=ETH2 Prysm cli
# Requires=new dependency
# After=new dependency
After=network.target
Requires=$(basename $BUILDER_SYSTEMD_SERVICE)

[Service]
Type=simple
User=$BUILDER_USR
WorkingDirectory=$DATA_DIR/${ethereum_network}/$(basename $PRYSM_BC_BIN)
ExecStart=$PRYSM_BC_BIN --accept-terms-of-use \\
            --datadir=$DATA_DIR/${ethereum_network}/$(basename $PRYSM_BC_BIN) \\
            --${ethereum_network} \\
            --execution-endpoint=http://localhost:8551 \\
            --jwt-secret=$BUILDER_JWT_PATH \\
            --log-file=$DATA_DIR/${ethereum_network}/$(basename $PRYSM_BC_BIN).log \\
            --checkpoint-sync-url=https://holesky.beaconstate.ethstaker.cc/

[Install]
WantedBy=default.target
EOF

systemctl enable $PRYSM_BC_SYSTEMD_SERVICE
systemctl start $(basename $PRYSM_BC_SYSTEMD_SERVICE)
